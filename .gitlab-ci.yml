# This is a sample build configuration for Python in Gitlab.

image: python:3.8

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip

stages:
  - static analysis
  - test
  - clean

before_script:
  - make install_reqs

black-and-isort:
  stage: static analysis
  script:
    - isort . --check-only
    - black --check .

mypy:
  stage: static analysis
  allow_failure: true
  script:
    - python -m mypy module --ignore-missing-imports
    - python -m mypy tests --ignore-missing-imports

flake8:
  stage: static analysis
  allow_failure: true
  script:
    - flake8 .

test_36:
  stage: test
  script:
    - make test_w_coverage
  after_script:
    # print the tag with the total coverage
    - grep -o '<span.*' htmlcov/index.html | head -1
    - mkdir -p htmlcov
    - tar czf coverage.tar.gz htmlcov/
  artifacts:
    reports:
      junit: test_report_36.xml
    paths:
      - test_report_36.xml
      - coverage.tar.gz
  coverage: '/span\sclass="pc_cov">\d+%<\/span>/'
  only:
    changes:
      - module/**/*
      - tests/**/*
      - requirements.txt
      - Makefile
  retry:
    max: 2
    when: runner_system_failure

clean_job:
  stage: clean
  script:
    - make clean
  when: always






